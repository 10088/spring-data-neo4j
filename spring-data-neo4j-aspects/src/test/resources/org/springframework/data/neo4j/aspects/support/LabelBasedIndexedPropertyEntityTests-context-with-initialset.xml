<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath*:META-INF/spring/*.properties"/>

	<context:component-scan base-package="org.springframework.data.neo4j.aspects.support" />



	<bean id="neo4jNodeBacking" class="org.springframework.data.neo4j.aspects.support.node.Neo4jNodeBacking" factory-method="aspectOf">
		<property name="template" ref="template"/>
		<property name="nodeEntityStateFactory" ref="nodeEntityStateFactory"/>
	</bean>

	<bean class="org.springframework.data.neo4j.aspects.support.relationship.Neo4jRelationshipBacking" factory-method="aspectOf">
		<property name="template" ref="template"/>
		<property name="relationshipEntityStateFactory" ref="relationshipEntityStateFactory"/>
	</bean>

	<bean id="graphDatabaseService" class="org.neo4j.test.ImpermanentGraphDatabase" destroy-method="shutdown" scope="singleton"/>

    <bean id="conversionService" class="org.springframework.data.neo4j.fieldaccess.Neo4jConversionServiceFactoryBean"/>
    <bean id="indexCreationMappingEventListener" class="org.springframework.data.neo4j.support.mapping.IndexCreationMappingEventListener">
        <constructor-arg ref="indexProvider" />
        <constructor-arg ref="schemaIndexProvider" />
        <constructor-arg ref="nodeTypeRepresentationStrategy" />
    </bean>


    <bean id="mappingInfrastructure" class="org.springframework.data.neo4j.support.MappingInfrastructureFactoryBean">
        <property name="graphDatabaseService" ref="graphDatabaseService"/>
        <property name="conversionService" ref="conversionService"/>
        <property name="mappingContext" ref="mappingContext"/>
        <property name="entityStateHandler" ref="entityStateHandler"/>

        <property name="nodeTypeRepresentationStrategy" ref="nodeTypeRepresentationStrategy"/>
        <property name="nodeEntityStateFactory" ref="nodeEntityStateFactory"/>
        <property name="nodeEntityInstantiator" ref="graphEntityInstantiator"/>

        <property name="relationshipTypeRepresentationStrategy" ref="relationshipTypeRepresentationStrategy"/>
        <property name="relationshipEntityStateFactory" ref="relationshipEntityStateFactory"/>
        <property name="relationshipEntityInstantiator" ref="relationshipEntityInstantiator"/>
        <property name="validator">
            <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
        </property>
    </bean>

    <bean id="template" class="org.springframework.data.neo4j.support.Neo4jTemplate">
        <constructor-arg name="infrastructure" ref="mappingInfrastructure"/>
    </bean>

	<bean id="indexProvider" class="org.springframework.data.neo4j.support.index.IndexProviderImpl">
		<constructor-arg ref="graphDatabase" />
	</bean>
	<bean id="schemaIndexProvider" class="org.springframework.data.neo4j.support.schema.SchemaIndexProvider">
		<constructor-arg ref="graphDatabase" />
	</bean>

    <bean id="entityStateHandler" class="org.springframework.data.neo4j.support.mapping.EntityStateHandler">
        <constructor-arg ref="mappingContext"/>
        <constructor-arg ref="graphDatabase"/>
    </bean>
    <bean id="graphDatabase" class="org.springframework.data.neo4j.support.DelegatingGraphDatabase">
        <constructor-arg ref="graphDatabaseService"/>
    </bean>
    <bean id="relationshipEntityInstantiator" class="org.springframework.data.neo4j.support.relationship.RelationshipEntityInstantiator">
        <constructor-arg ref="entityStateHandler"/>
    </bean>

    <bean id="graphEntityInstantiator" class="org.springframework.data.neo4j.support.node.NodeEntityInstantiator">
        <constructor-arg ref="entityStateHandler"/>
    </bean>

    <bean id="typeRepresentationStrategyFactory" class="org.springframework.data.neo4j.support.typerepresentation.TypeRepresentationStrategyFactory">
        <constructor-arg ref="graphDatabase"/>
    </bean>

    <bean id="nodeTypeRepresentationStrategy" factory-bean="typeRepresentationStrategyFactory" factory-method="getNodeTypeRepresentationStrategy" />
    <bean id="relationshipTypeRepresentationStrategy" factory-bean="typeRepresentationStrategyFactory" factory-method="getRelationshipTypeRepresentationStrategy"/>

    <bean id="nodeEntityStateFactory" class="org.springframework.data.neo4j.support.node.NodeEntityStateFactory">
        <constructor-arg ref="mappingContext"/>
        <constructor-arg>
            <bean class="org.springframework.data.neo4j.fieldaccess.NodeDelegatingFieldAccessorFactory$Factory"/>
        </constructor-arg>
    </bean>

    <bean id="mappingContext" class="org.springframework.data.neo4j.support.mapping.Neo4jMappingContext">

        <!-- NW-ISSUE01 Possibility for getting around some of the schema vs data tx issues
                        is to set the initialEntitySet upfront, however its a pain to do this
                        manually would probably be better if we could detect all the entities
                        at startup rather than requiring them to be explicitly set here ... -->
        <property name="initialEntitySet" >
            <set>
                <value>org.springframework.data.neo4j.aspects.support.domain.TypeAliasedThing</value>
                <value>org.springframework.data.neo4j.aspects.support.domain.TypeAliasedSubThing</value>
                <value>org.springframework.data.neo4j.aspects.support.domain.TypeAliasedSubSubThing</value>
            </set>
        </property>
    </bean>

    <bean id="relationshipEntityStateFactory" class="org.springframework.data.neo4j.support.relationship.RelationshipEntityStateFactory">
        <constructor-arg ref="mappingContext"/>
        <constructor-arg>
            <bean class="org.springframework.data.neo4j.fieldaccess.RelationshipDelegatingFieldAccessorFactory$Factory"/>
        </constructor-arg>
    </bean>

    <bean id="transactionManager" class="org.springframework.data.neo4j.config.JtaTransactionManagerFactoryBean">
        <constructor-arg ref="graphDatabaseService"/>
    </bean>

    <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/>



    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <!-- Adds dependency checks for setters annotated with @Required -->
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />

    <bean class="org.springframework.data.neo4j.support.Neo4jExceptionTranslator"/>
</beans>
