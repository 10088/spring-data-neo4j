<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.docbook.org/xml/4.4/docbookx.dtd">
<chapter id="tutorial_repository">
        <title>Serving a good cause - Repository</title>
        <para>
            That was the first method to add to the brand new cineasts repository.
            First step was to create an (still empty) repository interface for Movie (and Actor). We added the repository configuration
            to our application context.
            Then we created a repository for the application, annotated it with @Repository and @Transactional and injected the movie repository.
            We did the same for the Actor.
        </para>
        <para>
            <programlisting language="java"><![CDATA[
public interface MovieRepository extends NodeGraphRepository<Movie> {
   // findById(String id) - automatic derived finder for a future SDG release
}

<datagraph:repositories base-package="org.neo4j.cineasts.repository"/>

@Repository @Transactional
public class CineastsRepostory {
  @Autowired MovieRepository movieRepository;

  public Movie getMovie(int id) {
      return movieRepository.findByPropertyValue(null,"id", id);
  }
}
    ]]></programlisting>
        </para>
</chapter>
